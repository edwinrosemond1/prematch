{"ast":null,"code":"var _jsxFileName = \"/Users/edwinrosemond/Documents/Projects/PreMatch/frontend/src/pages/Schedule.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; //import { schedule, noGames } from \"../SoccerData/ScheduleData.js\";\n\nimport Game from \"./Game.js\";\nimport { getSoccerSchedule } from \"../services/soccerScheduleDataService.js\";\nimport ReactLoading from \"react-loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst key = process.env.REACT_APP_API_KEY;\nexport default function Schedule() {\n  _s();\n\n  // change below to schedule when ready\n  const [schedule, setSchedule] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function init() {\n      // function sleep(ms) {\n      //   return new Promise((resolve) => setTimeout(resolve, ms));\n      // }\n      try {\n        const response = await fetch(\"http://localhost:5000/api/schedule\");\n        console.log(\"soccer schedule\");\n        console.log(response); //await sleep(2000);\n\n        setSchedule(response);\n      } catch (e) {\n        console.log(\"Error getting schedule\" + e);\n        setError(e);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    init();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"auto\",\n        maxWidth: \"100px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactLoading, {\n        type: \"spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (schedule.message) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Games Today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!schedule.sport_events) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Nothing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: schedule.sport_events.map(e => {\n      if (e.tournament.name == \"Premier League\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"-\"\n        }, e.competitors[0].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Schedule, \"Byh55PWh6sBFMBQVOb0dick7W4c=\");\n\n_c = Schedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"sources":["/Users/edwinrosemond/Documents/Projects/PreMatch/frontend/src/pages/Schedule.js"],"names":["React","useEffect","useState","Game","getSoccerSchedule","ReactLoading","key","process","env","REACT_APP_API_KEY","Schedule","schedule","setSchedule","loading","setLoading","error","setError","init","response","fetch","console","log","e","margin","maxWidth","message","sport_events","map","tournament","name","competitors","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,iBAAT,QAAkC,0CAAlC;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAxB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAegB,IAAf,GAAsB;AACpB;AACA;AACA;AACA,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAA5B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAHE,CAIF;;AACAN,QAAAA,WAAW,CAACM,QAAD,CAAX;AACD,OAND,CAME,OAAOI,CAAP,EAAU;AACVF,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BC,CAAvC;AACAN,QAAAA,QAAQ,CAACM,CAAD,CAAR;AACD,OATD,SASU;AACRR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF;;AACDG,IAAAA,IAAI;AACL,GAnBQ,EAmBN,EAnBM,CAAT;;AAoBA,MAAIJ,OAAJ,EAAa;AACX,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEU,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAAZ;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,MAAIb,QAAQ,CAACc,OAAb,EAAsB;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAI,CAACd,QAAQ,CAACe,YAAd,EAA4B;AAC1B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAA,cACGf,QAAQ,CAACe,YAAT,CAAsBC,GAAtB,CAA2BL,CAAD,IAAO;AAChC,UAAIA,CAAC,CAACM,UAAF,CAAaC,IAAb,IAAqB,gBAAzB,EAA2C;AACzC,4BACE;AAAA;AAAA,WAAUP,CAAC,CAACQ,WAAF,CAAc,CAAd,EAAiBC,EAA3B;AAAA;AAAA;AAAA;AAAA,gBADF;AAcD;AACF,KAjBA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA7DuBrB,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from \"react\";\n//import { schedule, noGames } from \"../SoccerData/ScheduleData.js\";\nimport Game from \"./Game.js\";\nimport { getSoccerSchedule } from \"../services/soccerScheduleDataService.js\";\nimport ReactLoading from \"react-loading\";\n\nconst key = process.env.REACT_APP_API_KEY;\n\nexport default function Schedule() {\n  // change below to schedule when ready\n  const [schedule, setSchedule] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function init() {\n      // function sleep(ms) {\n      //   return new Promise((resolve) => setTimeout(resolve, ms));\n      // }\n      try {\n        const response = await fetch(\"http://localhost:5000/api/schedule\");\n        console.log(\"soccer schedule\");\n        console.log(response);\n        //await sleep(2000);\n        setSchedule(response);\n      } catch (e) {\n        console.log(\"Error getting schedule\" + e);\n        setError(e);\n      } finally {\n        setLoading(false);\n      }\n    }\n    init();\n  }, []);\n  if (loading) {\n    return (\n      <div style={{ margin: \"auto\", maxWidth: \"100px\" }}>\n        <ReactLoading type=\"spin\" />\n      </div>\n    );\n  }\n  if (schedule.message) {\n    return <div>No Games Today</div>;\n  }\n  if (!schedule.sport_events) {\n    return <div>Nothing</div>;\n  }\n  return (\n    <div>\n      {schedule.sport_events.map((e) => {\n        if (e.tournament.name == \"Premier League\") {\n          return (\n            <div key={e.competitors[0].id}>\n              {/* <Game\n                homeTeamID={e.competitors[0].id}\n                awayTeamID={e.competitors[1].id}\n                homeTeam={e.competitors[0].name}\n                awayTeam={e.competitors[1].name}\n                matchID={e.id}\n                homeTeamName={e.competitors[0].name}\n                awayTeamName={e.competitors[1].name}\n              /> */}\n              -\n            </div>\n          );\n        }\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}